
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ItemsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  score: 'score',
  place_id: 'place_id'
};

exports.Prisma.LeaderboardScalarFieldEnum = {
  id: 'id',
  name: 'name',
  score: 'score'
};

exports.Prisma.PlacesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  room_id: 'room_id'
};

exports.Prisma.RoomsScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.itemsOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.leaderboardOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.placesOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.roomsOrderByRelevanceFieldEnum = {
  name: 'name'
};


exports.Prisma.ModelName = {
  items: 'items',
  leaderboard: 'leaderboard',
  places: 'places',
  rooms: 'rooms'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Configuração\\Desktop\\point-click\\front-end\\lib\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Configuração\\Desktop\\point-click\\front-end\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../lib/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel items {\n  id       Int    @id @unique(map: \"id_UNIQUE\") @default(autoincrement())\n  name     String @db.VarChar(225)\n  score    Int\n  place_id Int\n  places   places @relation(fields: [place_id], references: [id], onDelete: Cascade, map: \"fk_items_places\")\n\n  @@index([place_id], map: \"fk_items_places_idx\")\n}\n\nmodel leaderboard {\n  id    Int    @id @unique(map: \"id_UNIQUE\") @default(autoincrement())\n  name  String @db.VarChar(225)\n  score Int\n}\n\nmodel places {\n  id      Int     @id @unique(map: \"id_UNIQUE\") @default(autoincrement())\n  name    String  @db.VarChar(225)\n  room_id Int\n  items   items[]\n  rooms   rooms   @relation(fields: [room_id], references: [id], onDelete: Cascade, map: \"fk_places_rooms\")\n\n  @@index([room_id], map: \"fk_places_rooms_idx\")\n}\n\nmodel rooms {\n  id     Int      @id @unique(map: \"id_UNIQUE\") @default(autoincrement())\n  name   String   @db.VarChar(225)\n  places places[]\n}\n",
  "inlineSchemaHash": "32309396cb220c09e4863c94c707354539366f0c544df9c752c492a71ab12c5c",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"items\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"place_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"places\",\"kind\":\"object\",\"type\":\"places\",\"relationName\":\"itemsToplaces\"}],\"dbName\":null},\"leaderboard\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"places\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"room_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"items\",\"relationName\":\"itemsToplaces\"},{\"name\":\"rooms\",\"kind\":\"object\",\"type\":\"rooms\",\"relationName\":\"placesTorooms\"}],\"dbName\":null},\"rooms\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"places\",\"kind\":\"object\",\"type\":\"places\",\"relationName\":\"placesTorooms\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

